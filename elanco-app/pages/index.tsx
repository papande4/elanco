import Head from "next/head";
import styles from "../styles/Home.module.css";
import React, { useEffect, useState } from "react";
import { getTrendingData } from "../utils/utils";

export default function Home() {
  const [resources, setResources] = useState([]);
  const [raw, setRaw] = useState([]);
  const [resourceDetails, setResourceDetails] = useState([]);
  const [resourceLoading, setResourceLoading] = useState(false);
  const [trendingData, seTrendingData] = useState("");

  useEffect(() => {
    fetch("https://engineering-task.elancoapps.com/api/resources").then(
      async (res) => {
        setResources(await res.json());
      }
    );

    fetch("https://engineering-task.elancoapps.com/api/raw").then(
      async (res) => {
        setRaw(await res.json());
      }
    );
  }, []);

  const handleResourceSelected = (
    event: React.ChangeEvent<HTMLSelectElement>
  ) => {
    setResourceLoading(true);
    fetch(
      `https://engineering-task.elancoapps.com/api/resources/${event.target.value}`
    ).then(async (res) => {
      setResourceDetails(await res.json());
      setResourceLoading(false);
    });
  };

  const handleTrendsSelected = (
    event: React.ChangeEvent<HTMLSelectElement>
  ) => {
    const value = event.target.value;
    seTrendingData(getTrendingData(raw, value));
  };

  return (
    <>
      <Head>
        <title>Elanco App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div>
          <h2>Get the common trends from raw data</h2>
          <select
            name="trends"
            id="trends"
            className={styles.select}
            onChange={(event) => handleTrendsSelected(event)}
          >
            <option value="none" selected disabled hidden>
              Select an Option
            </option>
            <option value="HighestCost">Highest Cost</option>
            <option value="MinimumCost">Minimum Cost</option>
            <option value="MaximumConsumedQuantity">
              Maximum Consumed Quantity
            </option>
            <option value="MinimumConsumedQuantity">
              Minimum Consumed Quantity
            </option>
          </select>
          {trendingData && <h2>{trendingData}</h2>}
          <h2 style={{ marginTop: "15px" }}>
            Select a resource to get the details
          </h2>
          <select
            name="resources"
            id="resources"
            className={styles.select}
            onChange={(event) => handleResourceSelected(event)}
          >
            <option value="none" selected disabled hidden>
              Select an Option
            </option>
            {resources &&
              resources.length > 0 &&
              resources.map((item, index) => {
                return (
                  <option value={item} key={index}>
                    {item}
                  </option>
                );
              })}
          </select>
          {resourceLoading ? (
            <div>Loading..</div>
          ) : (
            resourceDetails &&
            resourceDetails.length > 0 && (
              <table className={styles.tableStyle}>
                <tr>
                  <th className={styles.thStyle}>ConsumedQuantity</th>
                  <th className={styles.thStyle}>Cost</th>
                  <th className={styles.thStyle}>Date</th>
                  <th className={styles.thStyle}>MeterCategory</th>
                  <th className={styles.thStyle}>InstanceId</th>
                  <th className={styles.thStyle}>ResourceGroup</th>
                  <th className={styles.thStyle}>ResourceLocation</th>
                  <th className={styles.thStyle}>UnitOfMeasure</th>
                  <th className={styles.thStyle}>Location</th>
                  <th className={styles.thStyle}>ServiceName</th>
                </tr>
                {resourceDetails.map((item, index) => {
                  return (
                    <>
                      <tr>
                        <td className={styles.thStyle}>
                          {item.ConsumedQuantity}
                        </td>
                        <td className={styles.thStyle}>{item.Cost}</td>
                        <td className={styles.thStyle}>{item.Date}</td>
                        <td className={styles.thStyle}>{item.MeterCategory}</td>
                        <td className={styles.thStyle}>{item.InstanceId}</td>
                        <td className={styles.thStyle}>{item.ResourceGroup}</td>
                        <td className={styles.thStyle}>
                          {item.ResourceLocation}
                        </td>
                        <td className={styles.thStyle}>{item.UnitOfMeasure}</td>
                        <td className={styles.thStyle}>{item.Location}</td>
                        <td className={styles.thStyle}>{item.ServiceName}</td>
                      </tr>
                    </>
                  );
                })}
              </table>
            )
          )}
        </div>
      </main>
    </>
  );
}
